{"version":3,"sources":["Pages/MasterList.js","Pages/Main.js","App.js","index.js"],"names":["Div","styled","div","MasterList","this","props","newList","startAddingList","lists","addNewList","editCurrentList","className","Component","Main","startAddingTask","setState","showAddingTask","addTask","task","selectedList","state","taskList","find","todo","id","tasks","updatedList","map","list","deleteTask","taskId","filter","editTaskName","name","editTaskCheck","check","checked","console","log","title","React","App","showNewListButton","masterLists","currentListId","currentListTitle","bind","currentList","listTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06df1501.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components';\n// import ShowList from '../../views/showlist';\n// import ListForm from '../../views/listform';\n// import AddItem from '../AddItem';\nconst Div = styled.div`\n        background-color: var(--primary-background);\n        width: 25%;\n        float: left;\n        min-height: 100vh;\n        color:var(--text);\n    `;\nexport default class MasterList extends Component {\n    render() {\n        const { newList, startAddingList, lists, addNewList, editCurrentList } = this.props;\n        return (\n            <Div>\n                <div className='header'>Lists</div>\n                {/* <ShowList lists={lists} editCurrentList={editCurrentList}/>\n                \n                {!newList && \n                <AddItem startAddingTask={startAddingList}>Add new list</AddItem>}\n                {newList && \n                <ListForm onSubmit={addNewList}/>} */}\n            </Div>\n        )\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\n// import TodoForm from './todoform';\n// import AddItem from '../components/AddItem';\n// import ShowTask from './showtask';\nconst Div = styled.div`\n    margin-left: 25%;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    color:var(--text);\n    `;\nexport default class Main extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            taskList: [],\n            showAddingTask: false\n        }\n    }\n\n    startAddingTask = () => {\n        this.setState({\n            showAddingTask: true\n        })\n    }\n\n    addTask = (task) => {\n        var selectedList = this.state.taskList.find(todo => todo.id === this.props.id);\n\n        if (typeof(selectedList) === 'undefined'){\n            selectedList = {\n                id: this.props.id,\n                tasks: []\n            }\n        }\n\n        selectedList.tasks = [...selectedList.tasks, task]\n        \n        var updatedList = this.state.taskList.map(tasks => {\n            if(tasks.id === this.props.id){\n                return selectedList\n            }\n            return tasks\n        })    \n\n        if(!updatedList.find(list => list.id === this.props.id)){\n            updatedList = [...updatedList, selectedList]\n        }\n   \n        this.setState({\n            taskList: updatedList,\n            showAddingTask: false\n        })\n    }\n\n    deleteTask = (taskId) => {\n        var selectedList = this.state.taskList.find(todo => todo.id === this.props.id);\n        selectedList.tasks = selectedList.tasks.filter((task => task.taskId !== taskId))\n        const updatedList = this.state.taskList.map(tasks => {\n            if(tasks.id === this.props.id){\n                return selectedList\n            }\n            return tasks\n        })\n        this.setState({\n            taskList: updatedList\n        })\n    };\n        \n    editTaskName = (taskId, name) => {\n        var selectedList = this.state.taskList.find(todo => todo.id === this.props.id);\n        selectedList.tasks = selectedList.tasks.map(task => {\n            if (task.taskId === taskId){\n                return {...task, task: name}\n            }\n            return task;\n        });\n        const updatedList = this.state.taskList.map(tasks => {\n            if(tasks.id === this.props.id){\n                return selectedList\n            }\n            return tasks\n        })\n        this.setState({\n            taskList: updatedList\n        })\n    };\n        \n    editTaskCheck = (taskId, check) => {\n        var selectedList = this.state.taskList.find(todo => todo.id === this.props.id);\n        selectedList.tasks = selectedList.tasks.map(task => {\n            if (task.taskId === taskId){\n                return {...task, checked: check}\n            }\n            return task;\n        });\n        const updatedList = this.state.taskList.map(tasks => {\n            if(tasks.id === this.props.id){\n                return selectedList\n            }\n            return tasks\n        })\n        this.setState({\n            taskList: updatedList\n        })\n\n        console.log(this.state.taskList)\n    };\n\n    render(){\n        const {id, title} = this.props\n        var selectedList = this.state.taskList.find(todo => todo.id === id);\n        if(selectedList){selectedList[\"tasks\"].map(task => console.log(task.task))}\n\n        if (!this.props.title){\n            return (\n                <Div>\n                    <h1 className='header'>\n                        To Do List\n                    </h1>\n                </Div>\n            )\n        }\n        return (\n            <Div> \n                <h1 className='header'>\n                    {title}\n                </h1>\n                \n                {/* {typeof(selectedList) !== 'undefined' &&\n                    <ShowTask \n                        taskList={selectedList.tasks}\n                        deleteTask={this.deleteTask}\n                        editTaskName={this.editTaskName}\n                        editTaskCheck={this.editTaskCheck}\n                    />\n                } */}\n\n                {/* {!this.state.showAddingTask && \n                <AddItem startAddingTask={this.startAddingTask}>Add new task</AddItem>}\n                {this.state.showAddingTask && \n                <TodoForm onSubmit={this.addTask}/>} */}\n            </Div>\n\n        )\n    }   \n}","import React, { Component } from 'react'\n// import TodoList from './views/todolist';\n// import SideBar from './components/Templates/SideBar';\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport MasterList from './Pages/MasterList';\nimport Main from './Pages/Main';\nimport './App.css';\nexport default class App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      masterLists: [],\n      currentListId: '',\n      currentListTitle: '',\n      showNewListButton: false\n    };\n    this.addNewList = this.addNewList.bind(this);\n    this.editCurrentList = this.editCurrentList.bind(this);\n  }\n\n  addNewList(list){\n      this.setState({\n        masterLists: [list, ...this.state.masterLists],\n        showNewListButton: false,\n      });\n  };\n\n  // deleteList(list){\n  // }\n  \n  editCurrentList(id){\n    this.setState({\n      currentListId: id\n    });\n\n    const currentList = this.state.masterLists.filter(list => {\n      return list.id === id\n    })\n\n    if (currentList) {\n      var listTitle = currentList.map(list => { return list.title })\n      this.setState({\n        currentListTitle: listTitle\n      });\n    }\n  };\n\n  startAddingList = () => {\n    this.setState({\n      showNewListButton: true\n    })\n}\n\n  render() {\n    return (\n      <>\n        <MasterList \n          lists={this.state.masterLists}\n          addNewList={this.addNewList}\n          editCurrentList={this.editCurrentList}\n          newList={this.state.showNewListButton}\n          startAddingList={this.startAddingList}\n        />\n\n        <Main \n            id={this.state.currentListId}\n            title={this.state.currentListTitle}\n          />\n\n      </>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}