{"version":3,"sources":["Components/Templates/ShowMasterLists.js","Components/Actions/AddButton.js","Components/Actions/SaveButton.js","Components/Actions/Input.js","Components/Templates/InputForm.js","Pages/MasterList.js","Components/Actions/DeleteButton.js","Components/Actions/CheckBox.js","Components/Templates/Tasks.js","Components/Templates/ShowTaskLists.js","Pages/Main.js","App.js","index.js"],"names":["Div","styled","div","ShowMasterLists","props","handleClick","event","preventDefault","editCurrentList","target","id","lists","map","list","onClick","name","Btn","AddButton","startAddingTask","children","Button","button","SaveButton","type","StyledInput","input","Input","this","placeholder","value","handleChange","onChange","Component","Form","form","InputForm","state","setState","handleSubmit","length","status","onSubmit","nextId","checked","alert","MasterList","newList","startAddingList","addNewList","className","DeleteButton","deleteTask","taskId","CheckBox","editTaskCheck","htmlFor","ListItemBlock","ListitemTitle","Tasks","changeTitle","toggle","handleRename","editTaskName","task","ShowTaskLists","taskList","console","log","todo","Main","showAddingTask","addTask","selectedList","find","tasks","updatedList","filter","check","title","React","App","showNewListButton","masterLists","currentListId","currentListTitle","bind","currentList","listTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f325f3a.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nconst Div = styled.div`\n    text-align: center;\n    font-family: var(--header-font);\n    letter-spacing: 0.1rem;\n    margin: 10%;\n    div {\n        padding: 0.5rem;\n        font-size: 1.5rem;\n    }\n    div:hover {\n        color: var(--secorndory-background);\n    }\n    button {\n        background-color: transparent;\n        border: none;\n        display: block\n    }\n`;\nconst ShowMasterLists = (props) => {\n    function handleClick(event){\n        event.preventDefault();\n        props.editCurrentList(event.target.id);\n    }\n    return (\n        <Div>\n            {props.lists.map(list => (\n                <button key={list.id} onClick={handleClick}>\n                    <div  id={list.id}>\n                        {list.name}\n                    </div>\n                </button>\n            ))}\n        </Div>\n    );\n}\nexport default ShowMasterLists;","import React from 'react';\nimport styled from 'styled-components';\nconst Div = styled.div`\n    padding: 2rem;\n`;\nconst Btn = styled.div`\n        margin-left: auto;\n        margin-right: auto;\n        cursor: pointer;\n        border: 1px solid var(--tertiary-background);\n        border-radius: 5px;\n        color: var(--text);\n        font-size: 1.2rem;\n        height: 40px;\n        width: 150px;\n        font-family: var(--content-font);\n        padding: 10px;\n        transition: all .2s ease-in-out;\n        text-align: center;\n        &:hover{\n            transform: scale(1.2);\n            background-color: var(--tertiary-background);\n        }\n    `;\nconst AddButton = (props) => {\n    return(\n        <Div>\n            <Btn onClick={() => props.startAddingTask()}>\n                {props.children}\n            </Btn>\n        </Div>\n    );\n}\nexport default AddButton;","import React from 'react';\nimport styled from 'styled-components';\nconst Button = styled.button`\n    width: 100%;\n    background: var(--tertiary-background);\n    border: 1px solid transparent;\n    border-radius: 5px;\n    cursor: pointer;\n    outline: none; \n    text-align: center;\n    min-height: 2.5rem;\n    font-family: var(--header-font);\n    font-size: 15px;\n    padding: 0 1rem 0 1rem\n`;\nconst SaveButton = (props) => {\n    const { type, children } = props\n    return(\n        <Button type={type}>{children}</Button>\n    );\n}\nexport default SaveButton;\n    ","import React, { Component } from 'react'\nimport styled from 'styled-components';\nconst StyledInput = styled.input`\n        width: 99%;\n        border: 1px solid var(--primary-background);\n        border-radius: 5px;\n        background-color: var(--secondory-background);\n        cursor: pointer;\n        outline: none; \n        text-align: center;\n        min-height: 2.5rem;\n        font-family: var(--header-font);\n        font-size: 1rem\n    `;\nexport default class Input extends Component {\n    render() {\n        const { name, placeholder, value, handleChange } = this.props;\n        return (\n            <StyledInput \n                name={name}\n                placeholder={placeholder}\n                value={value}\n                onChange={handleChange}\n            />\n        )\n    }\n}","import React, { Component } from 'react';\nimport nextId from 'react-id-generator';\nimport SaveButton from '../Actions/SaveButton';\nimport styled from 'styled-components';\nimport Input from '../Actions/Input';\nconst Form = styled.form`\n    padding: 2rem;\n`;\nexport default class InputForm extends Component {\n    state = {\n        name: \"\"\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n    handleSubmit = (event) => {\n        event.preventDefault(); \n        if (this.state.name.length > 0 && this.state.name.length < 20){\n            if (this.props.status === 'rename'){\n                this.props.onSubmit(this.props.id, this.state.name)\n            }\n            else{\n                this.props.onSubmit({\n                    id: nextId(),\n                    name: this.state.name,\n                    checked: false\n                })}\n        } \n        else {\n            alert(\"Input length should more than 1 and no longer than 20!\");\n        }\n    }\n    render() {\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Input \n                    name=\"name\" \n                    placeholder={this.props.placeholder}\n                    value={this.state.name}\n                    handleChange={this.handleChange}\n                />\n                <SaveButton>Save!</SaveButton>\n            </Form>               \n        )\n    }\n}","import React, { Component } from 'react'\nimport styled from 'styled-components';\nimport ShowMasterLists from '../Components/Templates/ShowMasterLists';\nimport AddButton from '../Components/Actions/AddButton';\nimport InputForm from '../Components/Templates/InputForm';\nconst Div = styled.div`\n        background-color: var(--primary-background);\n        width: 25%;\n        float: left;\n        min-height: 100vh;\n        color:var(--text);\n    `;\nexport default class MasterList extends Component {\n    render() {\n        const { newList, startAddingList, lists, addNewList, editCurrentList } = this.props;\n        return (\n            <Div>\n                <div className='header'>Lists</div>\n                <ShowMasterLists lists={lists} editCurrentList={editCurrentList}/>\n                 \n                {!newList && \n                <AddButton startAddingTask={startAddingList}>Add new list</AddButton>}\n                {newList && \n                <InputForm \n                    status='new list'\n                    placeholder='Enter new list'\n                    onSubmit={addNewList}/>}\n            </Div>\n        )\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nconst Button = styled.button`\n        display: block;\n        color: red;\n        cursor: pointer;\n        transition: all .2s ease-in-out;\n        background: transparent;\n        border: none;\n        outline: none;\n        font-size: 15px;\n        &:hover{\n            color: red;\n            transform: scale(1.4)\n        }\n    `;\nconst DeleteButton = (props) => {\n    return(\n        <Button \n            type=\"button\" \n            onClick={() => props.deleteTask(props.taskId)}\n        >X</Button>\n    );\n}\nexport default DeleteButton;","import React from 'react'\nimport './checkBox.css';\nexport default function CheckBox(props) {\n    const { taskId, checked, editTaskCheck} = props;\n    return (\n        <>\n            <input type=\"checkbox\" id={taskId} checked={checked} onChange={() => editTaskCheck(taskId, !checked)}/>\n                <label htmlFor={taskId} >\n                    <div id=\"tick_mark\" ></div>\n                </label>\n        </>\n    )\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components';\nimport DeleteButton from '../Actions/DeleteButton';\nimport CheckBox from '../Actions/CheckBox';\n\nimport InputForm from '../Templates/InputForm';\n\n// import ListForm from '../../views/listform';\n// import EditMode from '../editmode';\nconst ListItemBlock = styled.div`    \n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    border-bottom: 1px solid var(--tertiary-background);\n`;\nconst ListitemTitle = styled.div`\n    color: var(--text);\n    font-size: var(--secondory-font-size);\n    font-family: var(--content-font);\n    letter-spacing: 0.1rem;\n    div {\n        cursor: pointer;\n    }\n`;\nexport default class Tasks extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            toggle: true    \n        }\n    }\n\n    changeTitle = () => {\n        this.setState({toggle: !this.state.toggle})\n    }\n\n    handleRename = (id, name) => {\n        this.changeTitle()\n        this.props.editTaskName(id, name)\n    }\n    \n    render() {\n        const { taskId, task, checked, deleteTask, editTaskCheck, editTaskName } = this.props;\n        return (\n            <>\n            <ListItemBlock>\n                <CheckBox \n                    taskId={taskId}\n                    checked={checked}\n                    editTaskCheck={editTaskCheck}/>\n                <ListitemTitle>\n                    {this.state.toggle ? \n                    <div onClick={this.changeTitle}>{task}</div>:\n                    <InputForm \n                        id={taskId}\n                        status='rename'\n                        placeholder={task}\n                        onSubmit={this.handleRename}/>\n                    }\n\n                </ListitemTitle>\n                <DeleteButton \n                    taskId={taskId}\n                    deleteTask={deleteTask}/>\n            </ListItemBlock>\n        </>\n        )\n    }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Tasks from '../Templates/Tasks';\nconst Div = styled.div`\n    width: 70%\n`;\nconst ShowTaskLists = (props) => {\n    const { taskList, editTaskCheck, editTaskName, deleteTask} = props;\n    console.log(taskList)\n    return (\n        <Div>\n            {taskList.map(todo => (\n                <Tasks \n                    key={todo.id}\n                    taskId={todo.id}\n                    task={todo.name}\n                    checked={todo.checked}\n                    editTaskCheck={editTaskCheck}\n                    editTaskName={editTaskName}\n                    deleteTask={deleteTask}\n                />\n            ))}\n\n        </Div>\n    );\n}\nexport default ShowTaskLists;","import React from 'react';\nimport styled from 'styled-components';\nimport AddButton from '../Components/Actions/AddButton';\nimport InputForm from '../Components/Templates/InputForm';\nimport ShowTaskLists from '../Components/Templates/ShowTaskLists';\nconst Div = styled.div`\n    margin-left: 25%;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    color:var(--text);\n    `;\nexport default class Main extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            taskList: [],\n            showAddingTask: false\n        }\n    }\n\n    startAddingTask = () => {\n        this.setState({\n            showAddingTask: true\n        })\n    }\n\n    addTask = (task) => {\n        var selectedList = this.state.taskList.find(todo => todo.id === this.props.id);\n\n        if (typeof(selectedList) === 'undefined'){\n            selectedList = {\n                id: this.props.id,\n                tasks: []\n            }\n        }\n\n        selectedList.tasks = [...selectedList.tasks, task]\n        \n        var updatedList = this.state.taskList.map(tasks => {\n            if(tasks.id === this.props.id){\n                return selectedList\n            }\n            return tasks\n        })    \n\n        if(!updatedList.find(list => list.id === this.props.id)){\n            updatedList = [...updatedList, selectedList]\n        }\n   \n        this.setState({\n            taskList: updatedList,\n            showAddingTask: false\n        })\n    }\n\n    deleteTask = (taskId) => {\n        var selectedList = this.state.taskList.find(todo => todo.id === this.props.id);\n        selectedList.tasks = selectedList.tasks.filter((task => task.id !== taskId))\n        const updatedList = this.state.taskList.map(tasks => {\n            if(tasks.id === this.props.id){\n                return selectedList\n            }\n            return tasks\n        })\n        this.setState({\n            taskList: updatedList\n        })\n    };\n        \n    editTaskName = (taskId, name) => {\n        var selectedList = this.state.taskList.find(todo => todo.id === this.props.id);\n        selectedList.tasks = selectedList.tasks.map(task => {\n            if (task.id === taskId){\n                return {...task, name: name}\n            }\n            return task;\n        });\n        const updatedList = this.state.taskList.map(tasks => {\n            if(tasks.id === this.props.id){\n                return selectedList\n            }\n            return tasks\n        })\n        this.setState({\n            taskList: updatedList\n        })\n    };\n        \n    editTaskCheck = (taskId, check) => {\n        var selectedList = this.state.taskList.find(todo => todo.id === this.props.id);\n        selectedList.tasks = selectedList.tasks.map(task => {\n            if (task.id === taskId){\n                return {...task, checked: check}\n            }\n            return task;\n        });\n        const updatedList = this.state.taskList.map(tasks => {\n            if(tasks.id === this.props.id){\n                return selectedList\n            }\n            return tasks\n        })\n        this.setState({\n            taskList: updatedList\n        })\n    };\n\n    render(){\n        const {id, title} = this.props\n        var selectedList = this.state.taskList.find(todo => todo.id === id);\n        if(selectedList){console.log(selectedList)}\n\n        if (!this.props.title){\n            return (\n                <Div>\n                    <h1 className='header'>\n                        To Do List\n                    </h1>\n                </Div>\n            )\n        }\n        return (\n            <Div> \n                <h1 className='header'>\n                    {title}\n                </h1>\n                \n                {typeof(selectedList) !== 'undefined' &&\n                    <ShowTaskLists \n                        taskList={selectedList.tasks}\n                        deleteTask={this.deleteTask}\n                        editTaskName={this.editTaskName}\n                        editTaskCheck={this.editTaskCheck}\n                    />\n                }\n\n                {!this.state.showAddingTask && \n                <AddButton startAddingTask={this.startAddingTask}>Add new task</AddButton>}\n                {this.state.showAddingTask && \n                <InputForm \n                    status='new list'\n                    placeholder='Enter new task'\n                    onSubmit={this.addTask}/>}\n            </Div>\n\n        )\n    }   \n}","import React, { Component } from 'react'\nimport MasterList from './Pages/MasterList';\nimport Main from './Pages/Main';\nimport './App.css';\nexport default class App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      masterLists: [],\n      currentListId: '',\n      currentListTitle: '',\n      showNewListButton: false\n    };\n    this.addNewList = this.addNewList.bind(this);\n    this.editCurrentList = this.editCurrentList.bind(this);\n  }\n\n  addNewList(list){\n      this.setState({\n        masterLists: [...this.state.masterLists, list],\n        showNewListButton: false,\n      });\n  };\n\n  // deleteList(list){\n  // }\n  \n  editCurrentList(id){\n    this.setState({\n      currentListId: id\n    });\n\n    const currentList = this.state.masterLists.filter(list => {\n      return list.id === id\n    })\n\n    if (currentList) {\n      var listTitle = currentList.map(list => { return list.name })\n      this.setState({\n        currentListTitle: listTitle\n      });\n    }\n  };\n\n  startAddingList = () => {\n    this.setState({\n      showNewListButton: true\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <MasterList \n          lists={this.state.masterLists}\n          addNewList={this.addNewList}\n          editCurrentList={this.editCurrentList}\n          newList={this.state.showNewListButton}\n          startAddingList={this.startAddingList}\n        />\n\n        <Main \n            id={this.state.currentListId}\n            title={this.state.currentListTitle}\n          />\n      </>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}